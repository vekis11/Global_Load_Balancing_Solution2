name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE_NAME: sample-app
  IMAGE_TAG: ${{ github.sha }}
  IMAGE_URI: gcr.io/${{ secrets.GCP_PROJECT_ID }}/sample-app:${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r app/requirements.txt

      - name: Run tests (if any)
        run: |
          echo "No tests defined. Add your tests here."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate with service account
        run: |
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "❌ GCP_SA_KEY secret is not set"
            exit 1
          fi
          
          # Debug: Check the length of the secret
          echo "Secret length: ${#GCP_SA_KEY}"
          
          # Decode and verify the JSON
          echo '${{ secrets.GCP_SA_KEY }}' | base64 -d > /tmp/service-account.json
          
          # Check if the file was created and has content
          if [ ! -s /tmp/service-account.json ]; then
            echo "❌ Service account file is empty or was not created"
            echo "This usually means the GCP_SA_KEY secret is not properly base64-encoded"
            exit 1
          fi
          
          # Verify it's valid JSON
          if ! python3 -m json.tool /tmp/service-account.json > /dev/null 2>&1; then
            echo "❌ Service account file is not valid JSON"
            echo "First few characters of decoded secret:"
            head -c 100 /tmp/service-account.json
            exit 1
          fi
          
          echo "✅ Service account file is valid"
          gcloud auth activate-service-account --key-file=/tmp/service-account.json

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker --quiet

      - name: Verify secrets
        run: |
          if [ -z "${{ secrets.GCP_PROJECT_ID }}" ]; then
            echo "❌ GCP_PROJECT_ID secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "❌ GCP_SA_KEY secret is not set"
            exit 1
          fi
          echo "✅ Secrets are properly configured"

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_URI -f docker/Dockerfile .
          docker push $IMAGE_URI

  terraform-deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate with service account
        run: |
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "❌ GCP_SA_KEY secret is not set"
            exit 1
          fi
          
          # Debug: Check the length of the secret
          echo "Secret length: ${#GCP_SA_KEY}"
          
          # Decode and verify the JSON
          echo '${{ secrets.GCP_SA_KEY }}' | base64 -d > /tmp/service-account.json
          
          # Check if the file was created and has content
          if [ ! -s /tmp/service-account.json ]; then
            echo "❌ Service account file is empty or was not created"
            echo "This usually means the GCP_SA_KEY secret is not properly base64-encoded"
            exit 1
          fi
          
          # Verify it's valid JSON
          if ! python3 -m json.tool /tmp/service-account.json > /dev/null 2>&1; then
            echo "❌ Service account file is not valid JSON"
            echo "First few characters of decoded secret:"
            head -c 100 /tmp/service-account.json
            exit 1
          fi
          
          echo "✅ Service account file is valid"
          gcloud auth activate-service-account --key-file=/tmp/service-account.json

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false 
